|    __  __         _      _  _        _   _        _      |
|   |  \/  |  ___  | |__  (_)| |  ___ | \ | |  ___ | |_    |
|   | |\/| | / _ \ | '_ \ | || | / _ \|  \| | / _ \| __|   |
|   | |  | || (_) || |_) || || ||  __/| |\  ||  __/| |_    |
|   |_|  |_| \___/ |_.__/ |_||_| \___||_| \_| \___| \__|   |
|__________________________________________________________|




_________________________________________________________________________________________________________________________________________
|Что такое MobileNet?															|
|_______________________________________________________________________________________________________________________________________|
|MobileNet - это легковесная сверточная нейронная сеть, разработанная Google для мобильного и встраиваемого компьютерного зрения.	|
|Она оптимизирована для использования на мобильных устройствах с ограниченными вычислительными ресурсами и позволяет выполнять		|
|задачи компьютерного зрения, такие как классификация изображений и обнаружение объектов, с высокой производительностью и низким	|
|потреблением энергии. MobileNet использует техники, такие как глубокие сверточные сети и операции снижения размерности, чтобы		|
|достичь высокой точности при низкой сложности модели. Она стала популярным выбором для задач компьютерного зрения на мобильных		|
|устройствах и реализаций встраиваемого компьютерного зрения.										|
|_______________________________________________________________________________________________________________________________________|



1. Код загрузки моделей MobileNet:
----------------------------------------
Для загрузки моделей MobileNet используем библиотеку TensorFlow. 

'''Код_python'''
import tensorflow as tf
from tensorflow.keras.applications import MobileNet, MobileNetV2, MobileNetV3

# Загрузка MobileNet
model_Mobilenet = MobileNet()

# Загрузка MobileNetV2
model_MobilenetV2 = MobileNetV2()

# Загрузка MobileNetV3
model_MobilenetV3 = MobileNetV3()
----------------------------------------




2. Описание параметров:
----------------------------------------
 __  __       _     _  _       _  _       _   
|  \/  | ___ | |__ (_)| | ___ | \| | ___ | |_ 
| |\/| |/ _ \| '_ \| || |/ -_)| .` |/ -_)|  _|
|_|  |_|\___/|_.__/|_||_|\___||_|\_|\___| \__|

1 MobileNet function

keras.applications.MobileNet(
    input_shape=None,
    alpha=1.0,
    depth_multiplier=1,
    dropout=0.001,
    include_top=True,
    weights="imagenet",
    input_tensor=None,
    pooling=None,
    classes=1000,
    classifier_activation="softmax",
)
	|
	|
	|
	1.1------------------------------------------------------------------------------------------------------------------------
	- "input_shape": Форма тензора (3 входных канала(RGB), ширину, высота) - (3, 224, 224). Если не указан, используетсяпо умолчанию None, что означает, что модель принимает изображения любого размера.
	|
	- "alpha": Используется для масштабирования ширины модели. Значение по умолчанию 1.0, что означает использование полной ширины модели. Меньшие значения alpha уменьшают количество каналов и вычислительную сложность модели, что может быть полезно для мобильных или встроенных устройств.
	|
	- "depth_multiplier": значение float, которое контролирует глубину сети. Значение по умолчанию — 1,0.
	|
	- "dropout": значение float от 0 до 1, определяющее процент отсева. Значение по умолчанию — 0,001.
	|
	- "include_top": bool значение, указывающее, включать ли полностью подключенный уровень в верхнюю часть сети. Значение по умолчанию True.
	|
	- "weights": Определяет источник предобученных весов для модели. Значение "imagenet" указывает на использование весов, предобученных на наборе данных ImageNet. Или путь к файлу весов
	|
	- "input_tensor": Позволяет указать тензор входных данных для модели. По умолчанию None.
	|
	- "pooling": дополнительный режим объединения для извлечения функций, когда include_top является False.
	|	- None(по умолчанию) означает, что выходные данные модели будут 4D-тензора последнего сверточного блока.
	|	- avg означает, что глобальное среднее объединение будет применено к выходу последний сверточный блок и, таким образом, Результатом модели будет двумерный тензор.
	|	- max означает, что будет применен глобальный максимальный пул.
	|
	- "classes": Int значение. Определяет количество классов для классификации. По умолчанию 1000, что соответствует количеству классов в наборе данных ImageNet.
	|
	- "classifier_activation": Str значение. Определяет функцию активации для последнего слоя классификатора. По умолчанию используется функция "softmax" для многоклассовой классификации.
	|--------------------------------------------------------------------------------------------------------------------------



----------------------------------------
 __  __       _     _  _       _  _       _   __   __ ___ 
|  \/  | ___ | |__ (_)| | ___ | \| | ___ | |_ \ \ / /|_  )
| |\/| |/ _ \| '_ \| || |/ -_)| .` |/ -_)|  _| \ V /  / / 
|_|  |_|\___/|_.__/|_||_|\___||_|\_|\___| \__|  \_/  /___|

2 MobileNetV2 function

keras.applications.MobileNetV2(
    input_shape=None,
    alpha=1.0,
    include_top=True,
    weights="imagenet",
    input_tensor=None,
    pooling=None,
    classes=1000,
    classifier_activation="softmax",
)
	|
	|
	|
	2.1------------------------------------------------------------------------------------------------------------------------
	- "input_shape": Форма тензора (3 входных канала(RGB), ширину, высота) - (3, 224, 224). Если не указан, используетсяпо умолчанию None, что означает, что модель принимает изображения любого размера.
	|
	- "alpha": Используется для масштабирования ширины модели. Значение по умолчанию 1.0, что означает использование полной ширины модели. Меньшие значения alpha уменьшают количество каналов и вычислительную сложность модели, что может быть полезно для мобильных или встроенных устройств.
	|
	- "include_top": Определяет, следует ли включить верхние полносвязные слои модели (включая слой классификации) или нет. Если include_top=True, модель будет загружена с полносвязными слоями, предназначенными для классификации ImageNet.
	|
	- "weights": Определяет источник предобученных весов для модели. Значение "imagenet" указывает на использование весов, предобученных на наборе данных ImageNet. Или путь к файлу весов.
	|
	- "input_tensor": Позволяет указать тензор входных данных для модели. По умолчанию None.
	|
	- "pooling": Дополнительный режим объединения для извлечения функций, когда include_top является False.
	|	- None(по умолчанию) означает, что выходные данные модели будут 4D-тензора последнего сверточного блока.
	|	- avg означает, что глобальное среднее объединение будет применено к выходу последний сверточный блок и, таким образом, Результатом модели будет двумерный тензор.
	|	- max означает, что будет применен глобальный максимальный пул.
	|
	- "classes": Int значение. Определяет количество классов для классификации. По умолчанию 1000, что соответствует количеству классов в наборе данных ImageNet.
	|
	- "classifier_activation": Str значение. Определяет функцию активации для последнего слоя классификатора. По умолчанию используется функция "softmax" для многоклассовой классификации.
	|--------------------------------------------------------------------------------------------------------------------------



----------------------------------------
 __  __       _     _  _       _  _       _   __   __ ____ ___               _  _ 
|  \/  | ___ | |__ (_)| | ___ | \| | ___ | |_ \ \ / /|__ // __| _ __   __ _ | || |
| |\/| |/ _ \| '_ \| || |/ -_)| .` |/ -_)|  _| \ V /  |_ \\__ \| '  \ / _` || || |
|_|  |_|\___/|_.__/|_||_|\___||_|\_|\___| \__|  \_/  |___/|___/|_|_|_|\__,_||_||_|

3 MobileNetV3Small function

keras.applications.MobileNetV3Small(
    input_shape=None,
    alpha=1.0,
    minimalistic=False,
    include_top=True,
    weights="imagenet",
    input_tensor=None,
    classes=1000,
    pooling=None,
    dropout_rate=0.2,
    classifier_activation="softmax",
    include_preprocessing=True,
)
	|
	|
	|
	3.1------------------------------------------------------------------------------------------------------------------------
	- "input_shape": Форма тензора (3 входных канала(RGB), ширину, высота) - (3, 224, 224). Если не указан, используетсяпо умолчанию None, что означает, что модель принимает изображения любого размера.
	|
	- "alpha": Используется для масштабирования ширины модели. Значение по умолчанию 1.0, что означает использование полной ширины модели. Меньшие значения alpha уменьшают количество каналов и вычислительную сложность модели, что может быть полезно для мобильных или встроенных устройств.
	|
	- "minimalistic": Определяет, следует ли использовать минималистичную версию модели MobileNetV3. По умолчанию False.
	|
	- "include_top": Определяет, следует ли включить верхние полносвязные слои модели (включая слой классификации) или нет. Если include_top=True, модель будет загружена с полносвязными слоями, предназначенными для классификации ImageNet.
	|
	- "weights": Определяет источник предобученных весов для модели. Значение "imagenet" указывает на использование весов, предобученных на наборе данных ImageNet. Или путь к файлу весов.
	|
	- "input_tensor": Позволяет указать тензор входных данных для модели. По умолчанию None.
	|
	- "classes": Int значение. Определяет количество классов для классификации. По умолчанию 1000, что соответствует количеству классов в наборе данных ImageNet.
	|
	- "pooling": Дополнительный режим объединения для извлечения функций, когда include_top является False.
	|	- None(по умолчанию) означает, что выходные данные модели будут 4D-тензора последнего сверточного блока.
	|	- avg означает, что глобальное среднее объединение будет применено к выходу последний сверточный блок и, таким образом, Результатом модели будет двумерный тензор.
	|	- max означает, что будет применен глобальный максимальный пул.
	|
	- "dropout_rate": Определяет коэффициент отсева (dropout), применяемый к выходным данным последнего сверточного слоя перед полносвязными слоями.
	|
	- "classifier_activation": Str значение. Определяет функцию активации для последнего слоя классификатора. По умолчанию используется функция "softmax" для многоклассовой классификации.
	|
	- "include_preprocessing": Определяет, следует ли включить предварительную обработку изображений при загрузке, что включает в себя нормализацию. По умолчанию установлено значение True.
	|--------------------------------------------------------------------------------------------------------------------------



----------------------------------------
 __  __       _     _  _       _  _       _   __   __ ____ _                          
|  \/  | ___ | |__ (_)| | ___ | \| | ___ | |_ \ \ / /|__ /| |    __ _  _ _  __ _  ___ 
| |\/| |/ _ \| '_ \| || |/ -_)| .` |/ -_)|  _| \ V /  |_ \| |__ / _` || '_|/ _` |/ -_)
|_|  |_|\___/|_.__/|_||_|\___||_|\_|\___| \__|  \_/  |___/|____|\__,_||_|  \__, |\___|
                                                                           |___/      
4 MobileNetV3Large function

keras.applications.MobileNetV3Large(
    input_shape=None,
    alpha=1.0,
    minimalistic=False,
    include_top=True,
    weights="imagenet",
    input_tensor=None,
    classes=1000,
    pooling=None,
    dropout_rate=0.2,
    classifier_activation="softmax",
    include_preprocessing=True,
)
	|
	|
	|
	4.1------------------------------------------------------------------------------------------------------------------------
	- "input_shape": Форма тензора (3 входных канала(RGB), ширину, высота) - (3, 224, 224). Если не указан, используетсяпо умолчанию None, что означает, что модель принимает изображения любого размера.
	|
	- "alpha": Используется для масштабирования ширины модели. Значение по умолчанию 1.0, что означает использование полной ширины модели. Меньшие значения alpha уменьшают количество каналов и вычислительную сложность модели, что может быть полезно для мобильных или встроенных устройств.
	|
	|
	- "minimalistic": Определяет, следует ли использовать минималистичную версию модели MobileNetV3. По умолчанию False.
	|
	- "include_top": Определяет, следует ли включить верхние полносвязные слои модели (включая слой классификации) или нет. Если include_top=True, модель будет загружена с полносвязными слоями, предназначенными для классификации ImageNet.
	|
	- "weights": Определяет источник предобученных весов для модели. Значение "imagenet" указывает на использование весов, предобученных на наборе данных ImageNet. Или путь к файлу весов.
	|
	- "input_tensor": Позволяет указать тензор входных данных для модели. По умолчанию None.
	|
	- "classes": Int значение. Определяет количество классов для классификации. По умолчанию 1000, что соответствует количеству классов в наборе данных ImageNet.
	|
	- "pooling": Дополнительный режим объединения для извлечения функций, когда include_top является False.
	|	- None(по умолчанию) означает, что выходные данные модели будут 4D-тензора последнего сверточного блока.
	|	- avg означает, что глобальное среднее объединение будет применено к выходу последний сверточный блок и, таким образом, Результатом модели будет двумерный тензор.
	|	- max означает, что будет применен глобальный максимальный пул.
	|
	- "dropout_rate": Определяет коэффициент отсева (dropout), применяемый к выходным данным последнего сверточного слоя перед полносвязными слоями.
	|
	- "classifier_activation": Str значение. Определяет функцию активации для последнего слоя классификатора. По умолчанию используется функция "softmax" для многоклассовой классификации.
	|
	- "include_preprocessing": Определяет, следует ли включить предварительную обработку изображений при загрузке, что включает в себя нормализацию. По умолчанию установлено значение True.
	|--------------------------------------------------------------------------------------------------------------------------


_____________________________________________________________________________
|                       Кол-во параметров                                   |
|1. MobileNet имеет около 4,2 млн параметров при настройках по умолчанию.   |
|2. MobileNetV2 имеет около 3,4 миллиона параметров.                        |
|3. MobileNetV3Small имеет около 2,9 миллиона параметров.                   |
|4. MobileNetV3Large имеет около 5,4 миллионов параметров.                  |
|___________________________________________________________________________|


###############################
3. Разница мжду версиями MobileNet:-------------------------------------------------------------------------------------------------------------------------
	|
	-3.1 MobileNet: Это исходная версия архитектуры MobileNet, представленная в 2017 году. Она использует отделимые по глубине свертки для уменьшения количества параметров и вычислений, необходимых для модели.
	|    
	-3.2 MobileNetV2: Это обновленная версия MobileNet, представленная в 2018 году. Она использует новую архитектуру, называемую инвертированными остатками, которая помогает еще больше сократить количество параметров и вычислений, необходимых для модели.
	|
	-3.3 MobileNetV3Small: Это уменьшенная версия MobileNetV3, представленная в 2019 году. Она разработана, чтобы быть еще более эффективной для мобильных и встроенных устройств, с меньшим размером модели и более быстрым временем вывода.
	|
	-3.4 MobileNetV3Large: это увеличенная версия MobileNetV3, представленная в 2019 году. Она имеет большую емкость, чем MobileNetV3Small, что делает ее более подходящей для задач, требующих более высокой точности.
	|-------------------------------------------------------------------------------------------------------------------------------------------------------


###############################
4. Лучшая и худшая версии MobileNet:
|
- 4.1 Производительность:-------------------------------------------------------------------------------------------------------------------------
	|       - Если важны скорость работы и низкое потребление ресурсов то MobileNet и MobileNetV2 могут быть лучшим выборам особенно для мобильных устройств или встроенных систем.
	|       - Если важна высокая точность то MobileNetV3Large может быть предпочтительнее несмотря на то что она может потреблять больше ресурсов.
	|
	4.2 Точность: 
	|       - MobileNetV3Large скорее всего будет обеспечивать лучшую точность классификации изображений благодаря более глубоким и широким сетям. 
	|       - MobileNetV3Small с другой стороны может иметь более низкую точность но при этом она компактнее и менее требовательна к вычислительным ресурсам.
	|
	4.3 Размер модели:
	|   	- MobileNetV3Small обычно будет иметь меньший размер по сравнению с MobileNetV3Large из-за своей архитектуры. Это может быть важным фактором при ограниченном объеме памяти или для мобильных устройств.
	|
	4.4 Скорость обучения: 
	|   	- Более легкие версии такие как MobileNetV3Small могут обучаться быстрее чем более крупные модели что может быть важно для приложений в реальном времени.
	|---------------------------------------------------------------------------------------------------------------------------------------------


-----------------------------------------------------------------------------------------------------
Вывод: Лучшая и худшая версии MobileNet зависят от того, какие факторы являются ключевыми для задачи.
